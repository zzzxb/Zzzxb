<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <description>远方有多远,请你告诉我!</description>
    <link>http://www.idearfree.com/</link>
    <atom:link href="http://www.idearfree.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 10 Jul 2018 21:04:11 +0800</pubDate>
    <lastBuildDate>Tue, 10 Jul 2018 21:04:11 +0800</lastBuildDate>
    <generator>Jekyll v3.1.6</generator>
    
      <item>
        <title>Vim支持lua</title>
        <description>
&lt;p&gt;今天搞了快一天Vim支持Lua脚本了查看网上说的重新编译Vim之类的东西全都是复制粘贴的的，几乎找不出第二种能让vim支持lua的方法，不过最后还是让我找到一个我适用的方法。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;首先&lt;strong&gt;vim –version&lt;/strong&gt;查看一下自己的vim中是否有&lt;strong&gt;-lua&lt;/strong&gt;这个东西没，为减号就是没有，反之。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;通过&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo apt-get install ***&lt;/code&gt;安装一下任意一个套餐&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;vim-nox&lt;/li&gt;
  &lt;li&gt;vim-gtk&lt;/li&gt;
  &lt;li&gt;vim-gnome&lt;/li&gt;
  &lt;li&gt;vim-athena&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;基本上安装后再查看就能出现+lua了。&lt;/p&gt;

&lt;p&gt;如果本方法不行，再去网上查找第二种方法&lt;strong&gt;* 重新编译Vim支持lua&lt;/strong&gt;*&lt;/p&gt;
</description>
        <pubDate>Tue, 10 Jul 2018 20:03:01 +0800</pubDate>
        <link>http://www.idearfree.com/linux/2018/07/10/Vim%E6%94%AF%E6%8C%81Lua.html</link>
        <guid isPermaLink="true">http://www.idearfree.com/linux/2018/07/10/Vim%E6%94%AF%E6%8C%81Lua.html</guid>
        
        <category>Vim</category>
        
        
        <category>Linux</category>
        
      </item>
    
      <item>
        <title>JavaGUI</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#swing组件&quot; id=&quot;markdown-toc-swing组件&quot;&gt;Swing组件&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#布局管理&quot; id=&quot;markdown-toc-布局管理&quot;&gt;布局管理&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;*边学边写后边一一补充&lt;/p&gt;

&lt;h3 id=&quot;swing组件&quot;&gt;Swing组件&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;按钮(JButton)
单选按钮(JRadioButton)
复选框(JCheckBox)
组合框(JComboBox)
列表(JList)
文本框(JTextField 和 JpasswordField)
面板(JPanel)
表格(JTable)
框架(JFrame)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;布局管理&quot;&gt;布局管理&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;流式布局(FlowLayout)
边界布局(BorderLayout)
卡片布局(CardLayout)
网格布局(GridLayout)
null布局管理器
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Mon, 02 Jul 2018 15:03:01 +0800</pubDate>
        <link>http://www.idearfree.com/java/2018/07/02/Java%E4%B8%ADGUI.html</link>
        <guid isPermaLink="true">http://www.idearfree.com/java/2018/07/02/Java%E4%B8%ADGUI.html</guid>
        
        <category>Java</category>
        
        
        <category>Java</category>
        
      </item>
    
      <item>
        <title>Tomcat发布项目绑定域名</title>
        <description>
&lt;ol&gt;
  &lt;li&gt;去掉端口号8080
    &lt;ol&gt;
      &lt;li&gt;tomcat下conf文件中server.xml文件找到8080修改成80即可&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;域名跟项目名绑定
    &lt;ol&gt;
      &lt;li&gt;server.xml修改&amp;lt;Host name=”所需要绑定域名”&amp;gt;&lt;/li&gt;
      &lt;li&gt;&amp;lt;host&amp;gt;&amp;lt;Context docBase=”项目名”&amp;gt;&amp;lt;/host&amp;gt;&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/kongnan93/article/details/50461810&quot;&gt;配置详细原文&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 13 Apr 2018 09:00:01 +0800</pubDate>
        <link>http://www.idearfree.com/java/web/2018/04/13/Tomcat%E5%8F%91%E5%B8%83%E9%A1%B9%E7%9B%AE%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D.html</link>
        <guid isPermaLink="true">http://www.idearfree.com/java/web/2018/04/13/Tomcat%E5%8F%91%E5%B8%83%E9%A1%B9%E7%9B%AE%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D.html</guid>
        
        <category>Tomcat</category>
        
        
        <category>Java</category>
        
        <category>Web</category>
        
      </item>
    
      <item>
        <title>Tomcat启动闪退</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1排查错误&quot; id=&quot;markdown-toc-1排查错误&quot;&gt;1.排查错误&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2解决方案&quot; id=&quot;markdown-toc-2解决方案&quot;&gt;2.解决方案&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://baike.baidu.com/item/tomcat/255751?fr=aladdin&quot;&gt;百度百科Tomcat&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;1排查错误&quot;&gt;1.排查错误&lt;/h2&gt;
&lt;p&gt;进入tomcat的bin目录中shift+右键打开命令窗口(只要cmd进去bin目录就行),输入&lt;code&gt;startup.bat&lt;/code&gt;,如果不能运行会提示相关错误。&lt;/p&gt;

&lt;h2 id=&quot;2解决方案&quot;&gt;2.解决方案&lt;/h2&gt;
&lt;p&gt;*计算机-&amp;gt;属性-&amp;gt;环境变量-&amp;gt;添加&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;配置JDK路径:JAVA_HOME
    &lt;blockquote&gt;
      &lt;p&gt;名称:JAVA_HOME 路径:jdk目录 然后加入到path中%JAVA_HOME%\bin;下同&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;配置JRE路径:JRE_HOME&lt;/li&gt;
  &lt;li&gt;配置Tomcat路径:CATALINA_HOME&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;*最后启动tomcat打开浏览器输入:&lt;code&gt;http://localhost:8080&lt;/code&gt;看能否正常启动&lt;/p&gt;
</description>
        <pubDate>Fri, 13 Apr 2018 08:00:01 +0800</pubDate>
        <link>http://www.idearfree.com/java/web/2018/04/13/Tomcat%E5%90%AF%E5%8A%A8%E9%97%AA%E9%80%80.html</link>
        <guid isPermaLink="true">http://www.idearfree.com/java/web/2018/04/13/Tomcat%E5%90%AF%E5%8A%A8%E9%97%AA%E9%80%80.html</guid>
        
        <category>JSP</category>
        
        
        <category>Java</category>
        
        <category>Web</category>
        
      </item>
    
      <item>
        <title>初步体验Oracle管理数据</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1oracle的功能特点&quot; id=&quot;markdown-toc-1oracle的功能特点&quot;&gt;1.Oracle的功能特点&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2如何启动oracle数据库&quot; id=&quot;markdown-toc-2如何启动oracle数据库&quot;&gt;2.如何启动Oracle数据库&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1oracle的功能特点&quot;&gt;1.Oracle的功能特点&lt;/h2&gt;
&lt;p&gt;Oracle数据库基于”客户/服务器”(Client/Server,CS)系统结构，此概念将应用程序功能处理划分到两个系统中，即客户端和服务器端。与用户相关的活动在客户端完成，是数据库相关的活动在服务器端完成。&lt;/p&gt;

&lt;p&gt;#####Oracle数据库的主要特点如下:#####&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;支持多用户，高并发事务处理。&lt;/li&gt;
  &lt;li&gt;数据库安全性和完整性方面性能优越。&lt;/li&gt;
  &lt;li&gt;网格计算，Oracle能够把许多低成本的设备集成起来，为用户提供高性能的共享计算机能力。&lt;/li&gt;
  &lt;li&gt;具有高可移植性，能够在主流的操作系统和硬件平台上运行.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;2如何启动oracle数据库&quot;&gt;2.如何启动Oracle数据库&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;【我的电脑右键】-【管理】-【管理工具】-【服务】&lt;/li&gt;
  &lt;li&gt;net start OracleServiceXXXX(需要启动服务名称)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;######OracleOraDb11g_home!TNSListener######
OracleOraDb11g_homeTNSListener服务是Oracle服务器的监听程序。客户端必须先连接驻留在数据库服务器上的监听程序，才能连接数据库服务器。监听器接受从客户端发出的请求，然后将请求传递给数据库服务器，以此建立客户端与服务器的连接。一点建立了连接，客户端遍可以与Oracle数据库服务器直接通信。&lt;/p&gt;
</description>
        <pubDate>Wed, 11 Apr 2018 20:20:01 +0800</pubDate>
        <link>http://www.idearfree.com/%E6%95%B0%E6%8D%AE%E5%BA%93/2018/04/11/Oracle%E6%80%BB%E7%BB%93.html</link>
        <guid isPermaLink="true">http://www.idearfree.com/%E6%95%B0%E6%8D%AE%E5%BA%93/2018/04/11/Oracle%E6%80%BB%E7%BB%93.html</guid>
        
        <category>Oracle</category>
        
        
        <category>数据库</category>
        
      </item>
    
      <item>
        <title>Hibernate缓存</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1hibernate缓存&quot; id=&quot;markdown-toc-1hibernate缓存&quot;&gt;1.Hibernate缓存&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2hibernate一级缓存&quot; id=&quot;markdown-toc-2hibernate一级缓存&quot;&gt;2.Hibernate一级缓存&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3hibernate二级缓存&quot; id=&quot;markdown-toc-3hibernate二级缓存&quot;&gt;3.Hibernate二级缓存&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1hibernate缓存&quot;&gt;1.Hibernate缓存&lt;/h2&gt;

&lt;p&gt;缓存是计算机领域的概念，他介于应用程序和永久性数据存储源(如硬盘上的文件或者数据库之间)，起作用是降低应用程序直接读写永久性数据存储源的频率，从而提高应用的运行性能。缓存中的数据是是数据存储源中数据的复制，应用程序在运行时直接读写缓存中的数据，只在某些特定时刻按照缓存中的数据来同步更新数据存储源。&lt;/p&gt;

&lt;p&gt;缓存的物理介质通常是内存，而永久性数据存储源的物理介质通常是硬盘或磁盘，应用程序读写内存的速度显然比读写硬盘的速度快。如果缓存中存放的数据量非常大，也会用硬盘作为缓存的物理介质。&lt;/p&gt;

&lt;p&gt;###hibernate的缓存一般分为三类：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;一级缓存&lt;/strong&gt;：Session缓存称为一级缓存。由于Session对象的生命周期通常对应一个数据库事务，因此它的缓存是事务范围的缓存。一级缓存是必须的。在一级缓存中，持久化类的每个实例都具有唯一的OID。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;二级缓存&lt;/strong&gt;：SessionFactory缓存分为内置缓存和外置缓存。内置缓存是Hibernate自带的，不可拆卸，是只读缓存，用来存放映射元数据和预定义SQL语句。外置缓存是一个可配置的缓存插件，默认SessionFactory不会启用这个缓存插件你。外置缓存中的数据是数据库的复制。SesssionFactory的外置缓存称为hibernate的二级缓存。二级缓存由SessionFactory负责管理。SesssionFactory对象的生命周期和应用程序的整个进程对应。二级缓存是可选的，可以在每个类或每个集合的粒度上配置二级缓存。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;查询缓存&lt;/strong&gt;：他是Hibernate为查询结果提供的，依赖于二级缓存.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;###缓存的作用范围分为3类：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;事务范围&lt;/strong&gt;:每个事务都有自己的缓存，缓存内数据不会被多事务并发访问。例如：hibernate的一级缓存，事务是不能跨多个Session的，Session内数据只能被当前事务访问，因此它属于事务范围的缓存。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;进程范围&lt;/strong&gt;：进程内的所有事物共享缓存，进程结束，缓存结束生命周期。例如，Hibernate的二级缓存，SessionFactory对象的生命周期对应应用程序的整个进程，因此它属于进程范围的缓存。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;集群范围&lt;/strong&gt;：缓存被一个或多个机器上的多个进程共享。Hibernate的二级缓存也可以作为集群范围的缓存。&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;2hibernate一级缓存&quot;&gt;2.Hibernate一级缓存&lt;/h2&gt;
&lt;p&gt;Session内的缓存即一级缓存，位于缓存中的对象称谓持久化对象，它和数据库中的相关记录对应。Session能够在某些时间点，按照缓存中的变化来执行相关sql语句，从而同步更新数据库，这一过程称为刷新缓存。&lt;/p&gt;

&lt;p&gt;当应用程序调用Session的save(),update(),saveOrUpdate(),load()或get()方法，以及调用Query查询接口的list()或iterate()方法时，如果在Session的缓存中还不存在相应的对象，Hibernate就会把该对象加入到一级缓存中。在刷新缓存时，Hibernate会根据缓存中对象的状态变化来同步更新数据库。由此可见，Session缓存有两大作用：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;减少访问数据库的频率。&lt;/li&gt;
  &lt;li&gt;保证数据库中的相关记录于缓存中的相应对象同步。&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	&lt;span class=&quot;n&quot;&gt;Dept&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dept1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dept&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sessionn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dept&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Byte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;Dept&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dept2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dept&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sessionn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dept&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Byte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dept1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dept2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//第一行第一次进行加载，get()方法先到一级缓存中查找OID为1的Dept对象，由于还不存在这个Dept对象，因此通过select语句到数据库中年加载该对象，并把它放到一级缓存中。第2行第二次执行Session的get()方法，get()方法先到一级缓存中查找OID为1的Dept对象，由于已经存在这个Dept对象，就直接返回该Dept对象的引用，不会再执行select查询语句。因此再示例7中，只执行了一次select语句，变量dept1和dept2引用的时同一个Dept对象，第三行输出true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Sessionn为应用程序提供了两个管理缓存的方法。&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;evict(Objecto) :从缓存中清除指定的持久化对象。&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	&lt;span class=&quot;n&quot;&gt;Dept&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dept1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dept&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dept&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Byte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;evict&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dept1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;Dept&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dept2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dept&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dept&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Byte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dept1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;~~~&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dept2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dept1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dept2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//第1次执行Sessionn的get()方法，get()方法先到一级缓存中查找OID为1的Dept对象，由于还不存在这个Dept对象，因此通过select语句到数据库中加载该对象，并把它放到一级缓存中。第2行session.evict()方法清除了缓存中的Dept对象。第3行第二次执行Session的get()方法，get()方法先拿到一级缓存查找OID为1的Dept对象，由于荣然不存咋这个Dept对象，因此通过select语句到数据库中加载该对象，再次执行select查询语句。因此再这段代码中，执行了两次select语句，变量dept1和dept2指向了不同的Dept对象，第4行输出了false。&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;clear():清空缓存中的所有持久化对象。
另外说一下flush().方法。
    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;n&quot;&gt;Dept&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dept&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dept&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sessionn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dept&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Byte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;dept&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setDeptName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;测试部&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;dept&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setDeptName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;质控部&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;tx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;commit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;//Hibernate执行以下update语句:update dept set dname=?,loc=? where deptno=? Dname字段被修改为&quot;质控部&quot;。在上边基础上增加flush()方法执行。&lt;/span&gt;

 &lt;span class=&quot;n&quot;&gt;Dept&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dept&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dept&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ssession&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dept&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;classs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Byte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;dept&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setDeptName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;开发部&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;flush&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;dept&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setDeptName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;市场部&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;tx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;commit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;//这段代码中Hibernate执行了以下两条update语句：&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;//update dept set dname=?,loc=? where deptno=?&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;//update dept set dname=?,loc=? where deptno=?&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;在上面代码中增加session.flush()语句后，flush()方法会强制进行从缓存到数据库的同步。在通过Session进行批量操作时，可以使用flush()和clear()方法配合实现.&lt;/p&gt;
    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;n&quot;&gt;Emp&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;emp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++){&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;emp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Emp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;emp&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;emp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;flush&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;clear&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;tx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;commit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;这段代码向Emp表中插入了10000条记录，每次批量插入30条Emp记录。程序执行sesion.fluh()方法时，会先向数据库批量插入30条记录，执行session.clear()方法把刚添加的30个Emp对象从一级缓存中清空。执行这段代码时注意以下两点:&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;如果希望提高批量插入的行你能，可以在hibernate.cfg.xml中,把hibernate.jdbc.batch_size 属性设置为30.但要注意，Emp对象的主键生成器不能为identity,因为如果使用了identity标识符生成器，hibernate会自动关闭JDBC的批量执行操作，batch_size的设置就不起作用。&lt;/li&gt;
  &lt;li&gt;也可以禁止使用二级缓存，因为如果使用了二级缓存，那么一级缓存中的对象会先复制到二级缓存中，再保存到数据库，这样会导致大量不必要的开销。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;一级缓存随着Session的开启而产生，随着Sessiion的关闭而结束，之前在程序中持久化在操作的都是一级缓存中的对象。要合理地管理好缓存，提高程序效率，可以通过clear() , evict()方法来清除缓存中的对象。&lt;/p&gt;

&lt;h2 id=&quot;3hibernate二级缓存&quot;&gt;3.Hibernate二级缓存&lt;/h2&gt;
&lt;p&gt;二级缓存时进程或集群范围内的缓存，可以被所有的Sesssion共享，其生命周期和SessionFactory一样。二级缓存是可配置的插件。Hibernate打包一些开源缓存实现，提供对他们的内置支持。&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;缓存插件&lt;/th&gt;
      &lt;th&gt;缓存实现类&lt;/th&gt;
      &lt;th&gt;查询缓存&lt;/th&gt;
      &lt;th&gt;类型&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;EHCache&lt;/td&gt;
      &lt;td&gt;org.hibernate.cache.EHCacheProvider&lt;/td&gt;
      &lt;td&gt;支持&lt;/td&gt;
      &lt;td&gt;进程范围的缓存；内存或者硬盘&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;OSCache&lt;/td&gt;
      &lt;td&gt;org.hibernate.cache.OSCacheProvider&lt;/td&gt;
      &lt;td&gt;支持&lt;/td&gt;
      &lt;td&gt;进程范围的缓存；内存或者硬盘&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SwarmCache&lt;/td&gt;
      &lt;td&gt;org.hibernate.cache.SwarmCacheProvider&lt;/td&gt;
      &lt;td&gt;不支持&lt;/td&gt;
      &lt;td&gt;集群范围的缓存&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;JBossCache&lt;/td&gt;
      &lt;td&gt;org.hibernate.cache.TreeCacheProvider&lt;/td&gt;
      &lt;td&gt;支持&lt;/td&gt;
      &lt;td&gt;集群范围的缓存&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;为了把表中的缓存插件集成到hibernate中,Hibernate提供了CacheProvider接口，它是缓存插件与hibernate之间的适配器。表中的缓存实现类就是CacheProvider的不同实现。&lt;/p&gt;

&lt;p&gt;###配置二级缓存的步骤如下:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;选择合适的缓存插件，配置其自带的配置文件。&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;选择需要使用二级缓存的持久化类，设置它的二级缓存的并发访问策略。
以EHCache配置为例:&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;将ehcache.xml文件添加到类路径下。
    &lt;blockquote&gt;
      &lt;p&gt;在路径hibernate-distrbution-3.3.2GA\project\etc下复制ehcache.xml&lt;/p&gt;
      &lt;cache&gt;标签为每个需要二级缓存的类和集合设定缓存的数据过期策略。配置如下
&lt;/cache&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	&lt;span class=&quot;c&quot;&gt;&amp;lt;!--缓存的名称，取值为列的完整名称或类的集合的名称--&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;cache&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name =&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sampleCachel&quot;&lt;/span&gt;
	&lt;span class=&quot;err&quot;&gt;&amp;lt;!--基于缓存可存放的对象的最大数目--&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		macElementsInMemeory=&quot;1000&quot;
	&lt;span class=&quot;c&quot;&gt;&amp;lt;!--如果true,表示对象永不过期，默认false--&amp;gt;&lt;/span&gt;
		eternal=&quot;true&quot;
	&lt;span class=&quot;c&quot;&gt;&amp;lt;!--设置允许对象处于空闲状态的最长时间，单位是秒--&amp;gt;&lt;/span&gt;
		timeToldleSeconnds=&quot;0&quot;
	&lt;span class=&quot;c&quot;&gt;&amp;lt;!--设置允许存在于缓存中的最长时间，单位是秒--&amp;gt;&lt;/span&gt;
		timeToLiveSeconds=&quot;0&quot;
	&lt;span class=&quot;c&quot;&gt;&amp;lt;!--是否将溢出的对象写到基子硬盘的缓存中--&amp;gt;&lt;/span&gt;
		overflowToDisk=&quot;false&quot;
	/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;开启二级缓存：
    &lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hibernate.cache.use_second_level_cache&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;指定缓存产品提供商
    &lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hibernate.cache.provider_class&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
     org.hibernate.cache.EhCacheProvider
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;指定使用二级缓存的持久化类。修改持久化类的映射文件,为&amp;lt;class&amp;gt;元素添加&amp;lt;cache&amp;gt;元素，配置如下:
    &lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;class&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Student&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;table=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;STUDENT&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;cache&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;usage=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;region=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;include=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;/class&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;&amp;lt;cache&amp;gt;的属性:
    &lt;ul&gt;
      &lt;li&gt;usage属性是必须的，指定并发访问策略，取值为transactional(事务缓存),read-write(读/写缓存)，nonstrict-read-write(非严格读/写缓存)或read-only(只读缓存).&lt;/li&gt;
      &lt;li&gt;region属性可选，默认为类或者集合的名称&lt;/li&gt;
      &lt;li&gt;include属性可选，取值为non-lazy(当缓存一个对象时，不会缓存它的映射为延迟加载的属性),all,默认取值为all.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;####注意
配置EHCache二级缓存时，需要添加如下jar包到程序中:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;ehcache-1.2.3.jar, EHCache包.&lt;/li&gt;
  &lt;li&gt;commons-logging-1.1.1.jar, 日志包。&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Sat, 07 Apr 2018 15:08:01 +0800</pubDate>
        <link>http://www.idearfree.com/%E6%A1%86%E6%9E%B6/2018/04/07/Hibernate%E7%BC%93%E5%AD%98.html</link>
        <guid isPermaLink="true">http://www.idearfree.com/%E6%A1%86%E6%9E%B6/2018/04/07/Hibernate%E7%BC%93%E5%AD%98.html</guid>
        
        <category>Hibernate</category>
        
        
        <category>框架</category>
        
      </item>
    
      <item>
        <title>Hibernate关联映射</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1关联关系&quot; id=&quot;markdown-toc-1关联关系&quot;&gt;1.关联关系&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2延迟加载&quot; id=&quot;markdown-toc-2延迟加载&quot;&gt;2.延迟加载&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3open-session-in-view-模式&quot; id=&quot;markdown-toc-3open-session-in-view-模式&quot;&gt;3.Open Session In View 模式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1关联关系&quot;&gt;1.关联关系&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;多对一
    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;c1&quot;&gt;//单项多对一关联&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;//例:Dept.java（部门）,Emp.java(员工)&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;//Dept.java&lt;/span&gt;
 &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Dept&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Serializable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Byte&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;deptNo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//部门编号&lt;/span&gt;
     &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;deptName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//部门名称&lt;/span&gt;
     &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//部门地址&lt;/span&gt;
     &lt;span class=&quot;c1&quot;&gt;//构造方法和setter和getter方法省略&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;//Emp.java&lt;/span&gt;
 &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Emp&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Serializable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;empNo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//员工编号&lt;/span&gt;
     &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;empName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//员工姓名&lt;/span&gt;
     &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Dept&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dept&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//所属部门&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;//Emp.hbm.xml&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
     &lt;span class=&quot;c1&quot;&gt;//Emp表关联的表以及主键&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;many&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;one&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;dept&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;column&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;DEPTNO&quot;&lt;/span&gt;
     &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;=&quot;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;下实体类的位置&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;gt;&amp;lt;/many-to-one&amp;gt;

 //添加-删除和数据库中的删除性质相同，不过是用面向对象方式解决而已
 Dept dept = new Dept(nnew Byte(&quot;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;22&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;),&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;学习部&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;,&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;校部&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;);
 session.save(dept);
 Emp emp = new Emp(10,&quot;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Zzzxb&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dept&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;emp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;tx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;commit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;一对多
    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;c1&quot;&gt;//一对多和多对一是相对的，下面只是对上边多对一的修改&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;//双向一对多关联&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;//Dept.java&lt;/span&gt;
 &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Dept&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;implemennts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Serializalole&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Byte&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;deptNo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//部门编号&lt;/span&gt;
     &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;deptName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//部门名称&lt;/span&gt;
     &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//部门地址&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;priavet&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Emp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;emps&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HashSet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Emp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;();&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//员工集合&lt;/span&gt;
     &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Emp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getEmps&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
         &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;emps&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
     &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SetEmps&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Emp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;emps&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
         &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;emps&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;emps&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setter&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getter&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;//Dept.hbm.xml&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;emps&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//emps是员工类集合&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;column&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;DEPTNO&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;one&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;many&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;=&quot;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;emp&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;实体类位置&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;*双向关联关系下的增删改操作
 1.set中cascade属性(Oracle中的级联操作)
     1.none
     2.save-update
     3.delete
     3.all&lt;/p&gt;
    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;c1&quot;&gt;//增-(删 改和查与之前操作一样这里不一一赘述了）&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;Dept&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dept&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Dept&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Byte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;22&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;学习部&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;系部&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;Emp&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;emp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Emp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Zzzxb&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;emp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setDept&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dept&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;dept&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getEmps&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;emp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dept&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;tx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;commit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

 &lt;span class=&quot;n&quot;&gt;Dept&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dept&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dept&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sessssion&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dept&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Byte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;22&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;sessionn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;delete&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dept&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;tx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;commit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;2.set中inverse属性
     1.inverse译为”反转”,false为主动方,一般在one方使用true&lt;/p&gt;
    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;c1&quot;&gt;//更换绑定，即把学生从部门中的学习部转到纪律部&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;Dept&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dept&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dept&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dept&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Byte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;7&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;Emp&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;emp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Emp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Emp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;4&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;//建立Dept和Emp的关联关系&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;emp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setDept&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dept&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;dept&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getEmps&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;emp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;tx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;commit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;3.set中order-by属性
     1.asc和desc（升序降序）只对set中元素排序&lt;/p&gt;
    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;c1&quot;&gt;//加载持久化对象Dept和Emp&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;Dept&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dept&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dept&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dept&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Byte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;10&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Emp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;emps&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dept&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getEmps&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Emp&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;emp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;emps&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;syso&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;emp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getEmpName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;多对多
    &lt;ol&gt;
      &lt;li&gt;通过中间表关联(例:项目(Project)-中间表(Proemp)-员工(Employee))
```java
 //在Project类中定义employeess属性的代码如下:
 public class Project implemennts java.io.Serializable{
 private Integer proid;
 private Sstrinng proname;
 private Seet&lt;Employee&gt; employees=new HashSet&lt;Employee&gt;(0);
 }
 //在Project.hbm.xml文件中,映射Project类的employees属性代码如下:&lt;/Employee&gt;&lt;/Employee&gt;&lt;/li&gt;
    &lt;/ol&gt;
    &lt;set name=&quot;employees&quot; table=&quot;PROEMP&quot; cascade=&quot;save-update&quot;&gt;
     &lt;key column=&quot;RPROID&quot; /&gt;
     &lt;many-to-many class=&quot;employee实体类位置&quot; column=&quot;REMPID&quot; /&gt;
 &lt;/set&gt;
    &lt;p&gt;//多对多中不建议把cascade属性设为all(多对多级连删除容易出错)
 Employee employee1 = new Employee(5,”Zzzxb”);
 Employee employee2 = new Employee(6,”Zpp”);
 Project project1 = new Project(5,”5号项目”);
 Project project2 = new Project(6,”6号项目”);
 project1.getEmployees().add(employee1);
 project1.getEmployees().add(employee2);
 project2.getEmployees().add(employee1);
 session.save(project1);
 session.save(project2);
 tx.commit();&lt;/p&gt;
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; 2. 配置双向多对多关联
 *对于双向多对多关联，需要把其中一段的inverse属性改为true
```java
 //Project.hbm.xml
 &amp;lt;set name=&quot;employees&quot; table=&quot;PROEMP&quot; cascade=&quot;save-update&quot;&amp;gt;
     &amp;lt;key column=&quot;RPROID&quot;/&amp;gt;
     &amp;lt;many-to-many class=&quot;Employee实体类&quot; column=&quot;REMPID&quot;/&amp;gt;
 &amp;lt;/set&amp;gt;
 //Employee.hbm.xml
 &amp;lt;set name=&quot;projects&quot; inverse=&quot;true&quot; table=&quot;PROEMP&quot;&amp;gt;
     &amp;lt;key column=&quot;REMPID&quot;/&amp;gt;
     &amp;lt;many-to-many class=&quot;Project实体类位置 column=&quot;RPROID&quot;/&amp;gt;
 &amp;lt;/set&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   * 一对多和多对一是相对这种关系跟数据库中外键的意思是相同的。通过反向生成工具可生成。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;2延迟加载&quot;&gt;2.延迟加载&lt;/h2&gt;
&lt;p&gt;当Hibernate从数据库中加载Dept对象时，如果同时自动加载所有关联的Emp对象，而程序世界上仅仅需要访问Dept对象,那么这些关联的Emp对象就白白浪费了许多内存空间。&lt;/p&gt;

&lt;p&gt;Hibernate查询Dept对象时,立即查询并加载与之关联的Emp对象，这种策咯称为立即加载。立即加载存在两大不足。&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;(1)select语句数目太多，需要频繁地访问数据库，会影响查询性能。
(2)在应用程序只需要访问Dept对象，而不需要访问Emp对象的场合，加载Emp对象完全是多余操作，这些多余的Emp对象白白浪费了许多空间。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Hibernate允许对象-关系映射文件中配置加载策略。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;类别名&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;class&gt;元素中lazy属性可选值为:默true(延迟加载) false(立即加载)&lt;/class&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;一对多关联级别&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;set&gt;中lazy属性可选值为:true(延迟加载) extra(增强延迟加载) 和 false(立即加载)&lt;/set&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;多对多关联级别&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;many-to-many&gt;元素中lazy属性可选proxy(延迟加载) no-proxy(无代理延迟加载)和false(立即加载);&lt;many-to-one&gt;元素中的lazy属性默认为proxy&lt;/many-to-one&gt;&lt;/many-to-many&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;3open-session-in-view-模式&quot;&gt;3.Open Session In View 模式&lt;/h2&gt;
&lt;p&gt;内容不完全，更多自行查找&lt;/p&gt;
</description>
        <pubDate>Sat, 07 Apr 2018 09:40:01 +0800</pubDate>
        <link>http://www.idearfree.com/%E6%A1%86%E6%9E%B6/2018/04/07/Hibernate%E5%85%B3%E8%81%94%E6%98%A0%E5%B0%84.html</link>
        <guid isPermaLink="true">http://www.idearfree.com/%E6%A1%86%E6%9E%B6/2018/04/07/Hibernate%E5%85%B3%E8%81%94%E6%98%A0%E5%B0%84.html</guid>
        
        <category>Hibernate</category>
        
        
        <category>框架</category>
        
      </item>
    
      <item>
        <title>HQL实用技术</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1使用hql查询语句&quot; id=&quot;markdown-toc-1使用hql查询语句&quot;&gt;1.使用HQL查询语句&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2编写hql语句&quot; id=&quot;markdown-toc-2编写hql语句&quot;&gt;2.编写HQL语句&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3执行hql语句&quot; id=&quot;markdown-toc-3执行hql语句&quot;&gt;3.执行HQL语句&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#4hql查询语句中的绑定参数&quot; id=&quot;markdown-toc-4hql查询语句中的绑定参数&quot;&gt;4.HQL查询语句中的绑定参数&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#5实现动态查询&quot; id=&quot;markdown-toc-5实现动态查询&quot;&gt;5.实现动态查询&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#6使用uniqueresult方法获取唯一结果&quot; id=&quot;markdown-toc-6使用uniqueresult方法获取唯一结果&quot;&gt;6.使用uniqueResult()方法获取唯一结果&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#7分页和投影&quot; id=&quot;markdown-toc-7分页和投影&quot;&gt;7.分页和投影&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#8通过反向工具生成&quot; id=&quot;markdown-toc-8通过反向工具生成&quot;&gt;8.通过反向工具生成&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1使用hql查询语句&quot;&gt;1.使用HQL查询语句&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;Hibernate支持三种查询方式:HQL(Hibernate Query Language)~Criteria~SQL.HQL是一种面向对象的查询语言，其中没有表和字段的概念，只有类，对象和属性的概念，Criteria查询又称对象查询,它采用面向对象的方式构造查询。原生SQL查询就是直接执行SQL语句，可以在SQL中利用不同数据库所特有的一些特性进行查询。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;2编写hql语句&quot;&gt;2.编写HQL语句&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;HQL语句中除了java类和属性的名称外，查询语句对大小写不敏感。HQL语句中的关键字建议使用小写字母
	1. from子句
	2. select子句
	3. where子句
	4. 使用表达式
	5. order by子句 asc升 - desc降&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;3执行hql语句&quot;&gt;3.执行HQL语句&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;声明变量并初始化：&lt;code&gt;String hql=&quot;from emp&quot;;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;构建Query对象：&lt;code&gt;Query query=sesssion.createQuery(hql);&lt;/code&gt;
    &lt;ol&gt;
      &lt;li&gt;使用list()方法查询
        &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Emp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Emp&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ep&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ep&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getEmpName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;使用iterator()方法查询
        &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;n&quot;&gt;Iterator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Emp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;empI&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;iterate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;Emp&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;emp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;empI&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;hasNNext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()){&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;emp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;empI&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;emp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getEmpName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;4hql查询语句中的绑定参数&quot;&gt;4.HQL查询语句中的绑定参数&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;按参数位置绑定
    &lt;blockquote&gt;
      &lt;p&gt;用”?”占位符来定义参数位置。例:where id=?
query.setType(位置,参数);&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;按参数名称绑定
    &lt;blockquote&gt;
      &lt;p&gt;用”:”开头，例如:where id=:stuId
query.setType(“stuId”,参数);&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;绑定各种类型参数(用法与上面相同)
    &lt;blockquote&gt;
      &lt;p&gt;query.setParameter(,);
query.setProperties()用于把命名参数与一个对象的属性值绑定&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;5实现动态查询&quot;&gt;5.实现动态查询&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;通过StringBuilder hql=new StringBuilder(“”);设置hql语句&lt;/li&gt;
  &lt;li&gt;创建实体类，对对象属性进行设置&lt;/li&gt;
  &lt;li&gt;通过判断对象各个属性是否为空使用hql.append();在hql后面添加字符串&lt;/li&gt;
  &lt;li&gt;通过query对象进行查询并转换hql为string类型- hql.toString()&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;6使用uniqueresult方法获取唯一结果&quot;&gt;6.使用uniqueResult()方法获取唯一结果&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;为占位符赋过值后通过 例:Dept dept = (Dept)query.uniqueResult();进行获取唯一结果&lt;/li&gt;
  &lt;li&gt;查询结果不唯一会报错NonUniqueResultExeception&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;7分页和投影&quot;&gt;7.分页和投影&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;分页
    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;n&quot;&gt;Strinng&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hql&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;from Dept order by deptNo&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;Query&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;createQuery&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
 &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pageSize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//每页显示条数&lt;/span&gt;
 &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pageIndex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//从第几页开始&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;countHQL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;select count(*) from Dept&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;//通过唯一查询并转换类型查询出总记录数&lt;/span&gt;
 &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Long&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;createQuery&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;countHQL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uniqueResult&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;intValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;//计算总页数(通过三目运算符判断为整与不为整的值)&lt;/span&gt;
 &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;totalpages&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pageSize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)?(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pageSize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;):(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pageSize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setMaxResults&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pageSize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//页面显示最大值&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;//设置从第几条开始输出&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setFirstResult&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pageIndex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pageSize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;//最后通过list或iterator进行输出&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;投影
 *有时候不需要获取对象的全部属性，只需一部分时就要用到投影查询了。
    &lt;blockquote&gt;
      &lt;p&gt;1.将每条结果封装成Object对象&lt;/p&gt;
      &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hql&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;select deptName from Dept&quot;&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;Query&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;createQuery&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;syso&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;      &lt;/div&gt;
      &lt;p&gt;2.将每条查询结果封装成Object数组&lt;/p&gt;
      &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hql&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;select deptName,locationn from Dept&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;Query&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;createQuery&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dept&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;syso&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dept&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;\t&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dept&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]...);&lt;/span&gt;		
 &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;      &lt;/div&gt;
      &lt;p&gt;3.将每条查询结果通过构造函数封装成对象&lt;/p&gt;
      &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;c1&quot;&gt;//封装类中必须有这个构造函数&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hql&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;select new Emp(empName) from Emp&quot;&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;Query&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;createQuery&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Emp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Emp&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;emp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;syso&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;emp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getEmpName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;      &lt;/div&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;8通过反向工具生成&quot;&gt;8.通过反向工具生成&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;创建MyEclise database 创建数据库对象&lt;/li&gt;
  &lt;li&gt;创建配置文件&lt;/li&gt;
  &lt;li&gt;创建映射文件，好了就酱。&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Fri, 06 Apr 2018 18:40:01 +0800</pubDate>
        <link>http://www.idearfree.com/%E6%A1%86%E6%9E%B6/2018/04/06/HQL%E5%AE%9E%E7%94%A8%E6%8A%80%E6%9C%AF.html</link>
        <guid isPermaLink="true">http://www.idearfree.com/%E6%A1%86%E6%9E%B6/2018/04/06/HQL%E5%AE%9E%E7%94%A8%E6%8A%80%E6%9C%AF.html</guid>
        
        <category>Hibernate</category>
        
        
        <category>框架</category>
        
      </item>
    
      <item>
        <title>Hibernate增删改查-三种状态</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1hibernate按主键查询&quot; id=&quot;markdown-toc-1hibernate按主键查询&quot;&gt;1.Hibernate按主键查询&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2增加操作&quot; id=&quot;markdown-toc-2增加操作&quot;&gt;2.增加操作&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3修改操作&quot; id=&quot;markdown-toc-3修改操作&quot;&gt;3.修改操作&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#4删除操作&quot; id=&quot;markdown-toc-4删除操作&quot;&gt;4.删除操作&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#5hibernate中java对象的三种状态&quot; id=&quot;markdown-toc-5hibernate中java对象的三种状态&quot;&gt;5.Hibernate中JAVA对象的三种状态&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#6脏检查及刷新缓存机制&quot; id=&quot;markdown-toc-6脏检查及刷新缓存机制&quot;&gt;6.脏检查及刷新缓存机制&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1hibernate按主键查询&quot;&gt;1.Hibernate按主键查询&lt;/h2&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GetAndLoad&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			 &lt;span class=&quot;n&quot;&gt;Session&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HibernateUtil&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;currentSession&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
			 &lt;span class=&quot;cm&quot;&gt;/*在进行修改或删除操作时，应先加载对象，然后再执行修改或删除操作。
			  *hibernate提供了两种方法按照主键加载对象：load()和get()
			  */&lt;/span&gt;
			 
			 &lt;span class=&quot;c1&quot;&gt;//get()方法,按主键查找,找不到的话会报-指针为空的异常&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//			 Dept dept = (Dept) session.get(Dept.class, new Byte(&quot;11&quot;));&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//			 System.out.println(dept.getDeptno() + &quot;\t&quot; + dept.getDname() + &quot;\t&quot;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//					 + dept.getLoc());&lt;/span&gt;
			 &lt;span class=&quot;c1&quot;&gt;//load()方法,找不到会报-对象找不的异常&lt;/span&gt;
			 &lt;span class=&quot;n&quot;&gt;Dept&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dept1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dept&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dept&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Byte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;11&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
			 &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dept1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getDeptno&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;\t&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dept1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getDname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;\t&quot;&lt;/span&gt;
					 &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dept1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getLoc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printStackTrace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;finally&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;HibernateUtil&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;closeSession&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;2增加操作&quot;&gt;2.增加操作&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;new一个实体类Zzzxb并设置属性&lt;/li&gt;
  &lt;li&gt;通过session.save(Zzzxb);持久化操作&lt;/li&gt;
  &lt;li&gt;通过tx.commit();提交事务&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;3修改操作&quot;&gt;3.修改操作&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;通过load或get先获取对象&lt;/li&gt;
  &lt;li&gt;通过对象的set属性来更改&lt;/li&gt;
  &lt;li&gt;通过commit提交事务&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;4删除操作&quot;&gt;4.删除操作&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;先获取对象&lt;/li&gt;
  &lt;li&gt;通过sessiion.delete();来持久化操作&lt;/li&gt;
  &lt;li&gt;通过commit提交事务&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;*增删改操作要在事务环境中进行完成。
&lt;code&gt;tx = session.beginTrannsaction();&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;5hibernate中java对象的三种状态&quot;&gt;5.Hibernate中JAVA对象的三种状态&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/s1294/archive/2016/08/23/5798172.html&quot;&gt;详解&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;瞬时状态(Transient)
 通过new创建对象后，对象并没有立刻持久化，它并未与数据库中的数据有任何的关联，此时java对象的状态为瞬时状态。&lt;/li&gt;
  &lt;li&gt;持久状态(Persistent)
 当对象与session关联，被session管理时，它就处于持久状态。&lt;/li&gt;
  &lt;li&gt;游离状态(Detached)
 处于持久状态的对象，脱离与其关联的Session的管理后，对象就处于游离状态&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;6脏检查及刷新缓存机制&quot;&gt;6.脏检查及刷新缓存机制&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/qizhiqq/article/details/71122714?utm_source=itdadao&amp;amp;utm_medium=referral&quot;&gt;详解&lt;/a&gt;.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;状态前后发生变化的对象，就是脏对象(例如修改操作)&lt;/li&gt;
  &lt;li&gt;Hibernate会对session中持久状态的对象进行检测，判断对象数据是否改变，这种判断称为脏检查&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Fri, 06 Apr 2018 17:40:01 +0800</pubDate>
        <link>http://www.idearfree.com/%E6%A1%86%E6%9E%B6/2018/04/06/Hibernate%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5.html</link>
        <guid isPermaLink="true">http://www.idearfree.com/%E6%A1%86%E6%9E%B6/2018/04/06/Hibernate%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5.html</guid>
        
        <category>Hibernate</category>
        
        
        <category>框架</category>
        
      </item>
    
      <item>
        <title>HibernateUtil</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1hibernateutil&quot; id=&quot;markdown-toc-1hibernateutil&quot;&gt;1.HibernateUtil&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;*在项目开发过程中，通常使用工具类来管理SessionFactory和Session，代码如下所示。&lt;/p&gt;

&lt;h2 id=&quot;1hibernateutil&quot;&gt;1.HibernateUtil&lt;/h2&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HibernateUtil&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//初始化一个ThreadLocal对象,ThreadLocal对象有get(),set()方法.&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ThreadLocal&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sTL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ThreadLocal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Configuration&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;conf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SessionFactory&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;conf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Configuration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;configure&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;sf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;conf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;buildSessionFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Throwable&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printStackTrace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ExceptionInInitializerError&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
	
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Session&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;currentSession&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;//sTL的get()方法根据当前线程返回其对应的线程内部变量，即Session对象，多线程的情况下共享数据库连接是不安全的。ThreadLocal保证了每个线程都有自己独立的Session对象。&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;Session&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sTL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;//如果session为null，打开一个新的session&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
			&lt;span class=&quot;c1&quot;&gt;//创建一个Session&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;openSession&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
			&lt;span class=&quot;c1&quot;&gt;//保存该session对象到ThreadLocal中&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;sTL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;//如果当前线程已经访问过数据库，则从sTL中get()就可以获取该线程上次获取过的session对象&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;cm&quot;&gt;/*关闭session，首先调用sTL.get()方法获取session对象，接着调用sTL.set
	 *(null)方法，把sTL管理的Session对象置为NULL，最后关闭Session。
	 */&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;closeSession&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;Session&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sTL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;sTL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;*通过ThreadLocal类，既实现了多线程并发，同时，也实现Singleton单例模式。
*做项目时建议使用HibernateUtil&lt;/p&gt;
</description>
        <pubDate>Fri, 06 Apr 2018 17:30:01 +0800</pubDate>
        <link>http://www.idearfree.com/%E6%A1%86%E6%9E%B6/2018/04/06/HibernateUtil.html</link>
        <guid isPermaLink="true">http://www.idearfree.com/%E6%A1%86%E6%9E%B6/2018/04/06/HibernateUtil.html</guid>
        
        <category>Hibernate</category>
        
        
        <category>框架</category>
        
      </item>
    
  </channel>
</rss>
